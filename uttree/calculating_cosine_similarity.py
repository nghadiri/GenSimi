# -*- coding: utf-8 -*-
"""
Cosine Similarity Calculation - UTTree Patient Similarity Assessment

This module calculates pairwise cosine similarity between patient embeddings
to assess patient similarity, which is the main objective of the UTTree methodology.

Based on the UTTree methodology from:
"A study into patient similarity through representation learning from medical records"
by Memarzadeh et al. (2022)

Patient Similarity Assessment Process:

1. Embedding Vector Processing:
   - Loads patient embedding vectors generated by Doc2Vec from temporal tree sequences
   - Converts DataFrame format to NumPy arrays for efficient computation
   - Uses first 200 dimensions for similarity calculation

2. Cosine Similarity Computation:
   - Calculates pairwise cosine similarity between all patient vectors
   - Creates symmetric similarity matrix with admission IDs as indices
   - Values range from -1 to 1, where 1 indicates identical medical patterns

3. Similarity Matrix Generation:
   - Creates labeled DataFrame with admission IDs as row and column names
   - Enables easy lookup of similarity scores between any two patients
   - Saves results for downstream similarity-based retrieval tasks

4. UTTree Similarity Assessment:
   According to the methodology, cosine similarity between patient embeddings
   reflects the degree of similarity in:
   - Temporal medical event patterns
   - Co-occurrence of medical interventions
   - Disease progression trajectories
   - Treatment response patterns

This similarity assessment forms the core evaluation metric for the UTTree model,
enabling identification of patients with similar medical trajectories for
clinical decision support, treatment recommendation, and cohort identification.

Input: Patient embedding vectors from Doc2Vec processing
Output: Pairwise cosine similarity matrix for patient similarity assessment
"""

from sklearn.metrics.pairwise import cosine_similarity
import pandas as pd
import numpy as np

df_RonS.hadm_ID.unique().tolist()
df_dis=pd.read_csv('...\Embedding.csv')
df_dis = df_dis.rename(columns={'Unnamed: 0': 'hadm_ID'})
df.iloc[:,0:200]
df_dis_RonS=df_dis[df_dis['hadm_ID'].isin(ls_RonS)]
list_patient=df_dis_RonS['hadm_ID'].unique().tolist()
len(list_patient)

title='Stage_S_ThirdTry_3'

df=pd.read_csv('D:\\Embedding\\Code\\A2021\\Embedding\\Emb_' + title + '.csv')
nVar=df.iloc[:,0:200]

indexx=df.admission_Id.tolist()
nVar

"""Convert dataframe to numpy format"""

var1=nVar.to_numpy()
var1

"""Calculation of cosine similarity between vectors"""

var2=cosine_similarity(var1, var1)
var2

"""Naming rows and columns with admission_ID"""

df1=pd.DataFrame(var2, index=[i for i in indexx])
df1.columns = indexx
#save as dataframe
df1.to_csv('...\\dis_'+title+'.csv')